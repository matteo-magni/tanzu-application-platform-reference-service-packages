name: Reusable workflow for testing Crossplane packages


on:

  workflow_call:

    inputs:
      package_version:
        type: string
        required: true
      package_name:
        type: string
        required: true
      package_provider:
        type: string
        required: true
      package_registry:
        type: string
        required: true
      package_repository:
        type: string
        required: true
      kubernetes_version:
        type: string
        default: v1.24.6
      kind_version:
        type: string
        default: v0.16.0

    secrets:
      AZURE_CONFIG:
        required: false
jobs:

  test:
    runs-on: ubuntu-latest
    env:
      CROSSPLANE_NAMESPACE: upbound-system
      CONFIG_VERSION: ${{ inputs.package_version }}
      CONFIG_IMAGE: ${{ inputs.package_registry }}/${{ inputs.package_repository }}

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Carvel tools
        uses: vmware-tanzu/carvel-setup-action@v1
        with:
          only: ytt
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install up CLI
        run: |
          curl -sL "https://cli.upbound.io" | sh
          sudo mv up /usr/local/bin/
          up --version

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          verbosity: 5
          version: ${{ inputs.kind_version }}
          kubectl_version: ${{ inputs.kubernetes_version }}
          node_image: kindest/node:${{ inputs.kubernetes_version }}

      - name: Verify Cluster
        run: |
          kubectl version
          which kubectl
          kubectl cluster-info
          kubectl get storageclass standard

      - name: Install Universal Crossplane
        run: |
          ./scripts/crossplane-install-uxp.sh ${UXP_VERSION}
        env:
          UXP_VERSION: v1.10.1-up.1

      - name: Test Crossplane package
        run: |
          export CLAIM_NAME="mongodb-$(dd if=/dev/urandom bs=20 count=1 2>/dev/null | sha1sum | head -c 20)"
          export TEST_APP_NAME=${CLAIM_NAME}
          export CONFIG_NAME=${CLAIM_NAME}

          echo CLAIM_NAME="${CLAIM_NAME}" >> $GITHUB_ENV
          echo TEST_APP_NAME="${TEST_APP_NAME}" >> $GITHUB_ENV
          echo CONFIG_NAME="${CONFIG_NAME}" >> $GITHUB_ENV

          [ -x ${SCRIPT} ] && ${SCRIPT} || true
        env:
          INSTALL_PROVIDER: "true"
          AZURE_CONFIG: ${{ secrets.AZURE_CONFIG }}
          SCRIPT: ./scripts/crossplane-e2e-${{ inputs.package_provider }}-${{ inputs.package_name }}.sh

      - name: Cleanup Crossplane package
        if: always()
        run: |
          [ -x ${SCRIPT} ] && ${SCRIPT} || true
        env:
          SCRIPT: ./scripts/crossplane-e2e-${{ inputs.package_provider }}-${{ inputs.package_name }}/cleanup.sh
