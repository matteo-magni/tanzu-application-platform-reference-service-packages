name: Reusable workflow for publishing Carvel packages

on:

  workflow_call:

    inputs:
      packages_basedir:
        type: string
        description: Packages base directory path
        default: packages
      package_version:
        type: string
        required: true
      package_name:
        type: string
        required: true
      package_provider:
        type: string
        required: true
      package_build_values:
        type: string
        description: File name holding mandatory values for ytt templates to prevent build failure
        default: build-values.yml
      repo_dir:
        type: string
        description: Directory path to hold the contents of the Carvel repository
        default: repository
      run-test:
        type: boolean
        default: false
      kubernetes-version:
        type: string
        default: v1.24.6
      kind-version:
        type: string
        default: v0.16.0
      kctrl-version:
        type: string
        default: v0.43.2

    outputs:
      package_repository:
        value: ${{ jobs.publish.outputs.package_repository }}
      package_registry:
        value: ${{ jobs.publish.outputs.package_registry }}

env:
  PACKAGE_VERSION: ${{ inputs.package_version }}
  PACKAGE_REGISTRY: ghcr.io
  PACKAGE_REPOSITORY: ${{ github.repository }}/${{ inputs.package_provider }}/carvel/${{ inputs.package_name }}
  PACKAGE_PROVIDER: ${{ inputs.package_provider }}
  PACKAGE_NAME: ${{ inputs.package_name }}
  PACKAGES_BASEDIR: ${{ inputs.packages_basedir }}
  PACKAGE_PACKAGING: carvel

  PACKAGE_BUILD_VALUES: ${{ inputs.package_build_values }}
  CARVEL_REPO_DIR: ${{ inputs.repo_dir }}
  REPO_PR_BRANCH_NAME: carvel-repo

jobs:

  publish:
    runs-on: ubuntu-latest

    outputs:
      package_repository: ${{ env.PACKAGE_REPOSITORY }}
      package_registry: ${{ env.PACKAGE_REGISTRY }}
      package_metadata_name: ${{ steps.info.outputs.package_metadata_name }}

    env:
      PACKAGE_DIR: ${{ env.PACKAGES_BASEDIR }}/${{ env.PACKAGE_PROVIDER }}/${{ env.PACKAGE_PACKAGING }}/${{ env.PACKAGE_NAME }}

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Install Carvel tools
        uses: vmware-tanzu/carvel-setup-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          kctrl: ${{ inputs.kctrl-version }}

      - name: Kctrl Release
        run: make kctrl-release
        env:
          IMGPKG_REGISTRY_HOSTNAME: ${{ env.PACKAGE_REGISTRY }}
          IMGPKG_REGISTRY_USERNAME: ${{ github.actor }}
          IMGPKG_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Get package info
        id: info
        run: |
          echo "package_metadata_name=$(yq e '.metadata.name' ${PACKAGE_DIR}/package-metadata.yml)" >> $GITHUB_OUTPUT

      # - name: Cache repository artifacts
      #   id: repo
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ env.CARVEL_REPO_DIR }}/packages/${{ steps.info.outputs.package_metadata_name }}
      #     key: ${{ steps.info.outputs.package_metadata_name }}-${{ github.sha }}

      # The files for the repository have been generated into ${CARVEL_REPO_DIR}/packages
      # They will be added to a PR from branch ${REPO_PR_BRANCH_NAME} to main
      - name: Prepare pull request
        run: |
          git checkout ${REPO_PR_BRANCH_NAME} || git checkout -b ${REPO_PR_BRANCH_NAME}
          git add ${CARVEL_REPO_DIR}
          git commit -m "add package ${PACKAGE_PROVIDER}/${PACKAGE_PACKAGING}/${PACKAGE_NAME} version ${PACKAGE_VERSION}"
          git push -u origin ${REPO_PR_BRANCH_NAME}

          # search for existing PR
          PR_NUMBER=$(gh pr list --base main --head $(git branch --show-current) --json number --jq '.[].number')
          if [ -z "$PR_NUMBER" ]; then
          # PR has not been created yet
            gh pr create --base main --title "Prepare new Carvel repository release" --body "$(git log --pretty=format:'%s' main..)"
          else
            # there is a PR already
            gh pr edit $PR_NUMBER --body "$(git log --pretty=format:'%s' main..)"
          fi

  test:
    if: inputs.run-test
    uses: ./.github/workflows/reusable-carvel-test.yml
    needs:
      - publish
    with:
      package_version: ${{ inputs.package_version }}
      package_name: ${{ inputs.package_name }}
      package_provider: ${{ inputs.package_provider }}
      package_registry: ${{ needs.publish.outputs.package_registry }}
      package_repository: ${{ needs.publish.outputs.package_repository }}

  # publish-repo:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - publish

  #   steps:

  #     - name: Retrieve repository artifacts
  #       id: repo
  #       uses: actions/cache@v3
  #       with:
  #         path: ${{ env.CARVEL_REPO_DIR }}/packages/${{ needs.publish.outputs.package_metadata_name }}
  #         key: ${{ needs.publish.outputs.package_metadata_name }}-${{ github.sha }}

  #     - name: Debug
  #       run: |
  #         tree -a ${{ env.CARVEL_REPO_DIR }}/packages/${{ needs.publish.outputs.package_metadata_name }}
